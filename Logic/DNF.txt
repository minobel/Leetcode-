ржХржЦржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржм Dutch National Flag Algorithm?
ржпржЦржи рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ ржПржХржЯрж╛ array ржерж╛ржХржмрзЗ ржпрзЗржЯрж╛рзЯ рж╢рзБржзрзБ рзй ржзрж░ржирзЗрж░ ржПрж▓рж┐ржорзЗржирзНржЯ ржЖржЫрзЗ (ржпрзЗржоржи: 0, 1, 2) ржПржмржВ рждрзЛржорж╛ржХрзЗ ржУржЗ array-ржЯрж╛ ржПржЗ рзй ржзрж░ржирзЗрж░ ржПрж▓рж┐ржорзЗржирзНржЯржХрзЗ ржПржХржЯрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрзНрж░ржорзЗ рж╕рж╛ржЬрж╛рждрзЗ рж╣ржмрзЗ тАФ рждржЦржи ржПржЗ ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржо ржЦрзБржм ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗред

ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:
рждрж┐ржиржЯрж╛ pointer ржмрж╛ index рж░рж╛ржЦржмрзЗ:

low тЖТ рзж ржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржкрж░рзЗрж░ ржЬрж╛рзЯржЧрж╛

mid тЖТ ржмрж░рзНрждржорж╛ржирзЗ ржпрзЗ element ржжрзЗржЦржЫ

high тЖТ рзи ржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржкрж░рзЗрж░ ржЬрж╛рзЯржЧрж╛

ржПржХржмрж╛рж░ array-рж░ ржоржзрзНржп ржжрж┐рзЯрзЗ mid pointer ржЪрж▓рзЗ ржпрж╛ржмрзЗ, ржЖрж░ ржкрзНрж░рждрж┐ржмрж╛рж░:

ржпржжрж┐ nums[mid] == 0 рж╣рзЯ тЖТ nums[low] ржПрж░ рж╕рж╛ржерзЗ swap ржХрж░рзЛ, low++, mid++

ржпржжрж┐ nums[mid] == 1 рж╣рзЯ тЖТ mid++ (ржХрж┐ржЫрзБржЗ swap ржХрж░рждрзЗ рж╣ржмрзЗ ржирж╛)

ржпржжрж┐ nums[mid] == 2 рж╣рзЯ тЖТ nums[mid] ржПржмржВ nums[high] swap ржХрж░рзЛ, high-- (ржХрж┐ржирзНрждрзБ mid ржПржХржЗ ржерж╛ржХржмрзЗ ржХрж╛рж░ржг ржирждрзБржи value ржжрзЗржЦрзЗ ржирж┐рждрзЗ рж╣ржмрзЗ)



ржЦрзБржм ржнрж╛рж▓ ржкрзНрж░рж╢рзНржи! Dutch National Flag Algorithm-ржП ржЖржорж░рж╛ ржпржЦржи nums[mid] == 0 ржкрж╛ржЗ, рждржЦржи low ржПржмржВ mid ржжрзБржЯрзЛ pointer-ржЗ ржХрзЗржи ++ ржХрж░рж┐тАФржПржЗржЯрж╛ ржПржЦржи ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржЫрж┐:
if (nums[mid] == 0) {
    swap(nums[low], nums[mid]);
    low++;
    mid++;
}

ЁЯФО ржХрзЗржи swap ржХрж░рж┐?
ржЖржорж╛ржжрзЗрж░ рж▓ржХрзНрж╖рзНржп:

рж╕ржм 0 ржмрж╛ржоржжрж┐ржХрзЗ ржпрж╛ржмрзЗ,

рж╕ржм 2 ржбрж╛ржиржжрж┐ржХрзЗ ржпрж╛ржмрзЗ,

рж╕ржм 1 ржорж╛ржЭржЦрж╛ржирзЗ ржерж╛ржХржмрзЗред

рждрж╛ржЗ 0 ржкрзЗрж▓рзЗ, рж╕рзЗржЯрж╛ low index-ржП ржкрж╛ржарж┐рзЯрзЗ ржжрзЗржЗ (swap ржХрж░рзЗ)ред

тЭУ ржХрзЗржи low++ ржХрж░рж┐?
low pointer ржПржоржи ржЬрж╛рзЯржЧрж╛ ржжрзЗржЦрж╛рзЯ, ржпрзЗржЦрж╛ржи ржерзЗржХрзЗ ржПржЦржирзЛ ржХрзЛржирзЛ 0 рж░рж╛ржЦрж╛ рж╣рзЯржирж┐ред ржЖржорж░рж╛ ржпржжрж┐ ржПржХржЯрж╛ржУ 0 ржкрж╛ржЗ, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ low-ржПрж░ ржЬрж╛рзЯржЧрж╛рзЯ ржмрж╕рж┐рзЯрзЗ low++ ржХрж░рзЗ ржжрж┐ржЗ ржпрзЗржи ржкрж░ржмрж░рзНрждрзА 0 ржПрж░ ржЬржирзНржп ржЬрж╛рзЯржЧрж╛ рждрзИрж░рж┐ рж╣рзЯред

тЭУ рждрж╛рж╣рж▓рзЗ mid++ ржХрзЗржи?
mid рж╣ржЪрзНржЫрзЗ ржЖржорж╛ржжрзЗрж░ current index ржпрзЗржЯрж╛ ржЪрзЗржХ ржХрж░ржЫрж┐ред ржпрзЗрж╣рзЗрждрзБ swap() ржХрж░рж╛рж░ ржкрж░ ржЖржорж░рж╛ ржЬрж╛ржирж┐ nums[mid] ржП ржПржЦржи ржПржоржи ржПржХржЯрж╛ ржорж╛ржи ржЖржЫрзЗ ржпрзЗржЯрж╛ ржЖржЧрзЗржЗ ржжрзЗржЦрж╛ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ (ржХрж╛рж░ржг ржПржЯрж╛ low ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗ), рждрж╛ржЗ ржПржЦржи ржЖржорж░рж╛ mid++ ржХрж░рж┐ ржпрж╛рждрзЗ ржкрж░ржмрж░рзНрждрзА element-ржП move ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

nums = [0, 1, 2]
        тЖС
       mid, low
nums[mid] == 0, рждрж╛ржЗ:

swap(nums[low], nums[mid]) тЖТ ржХрж┐ржЫрзБржЗ ржкрж░рж┐ржмрж░рзНрждржи рж╣рж▓ ржирж╛ (0 ржЖрж░ 0 swap)

low++ тЖТ 1, mid++ тЖТ 1

ржПржЦржи ржЖржорж░рж╛ ржкрж░ржмрж░рзНрждрзА index (1) check ржХрж░рждрзЗ ржкрж╛рж░ржмред

тЪая╕П ржпржжрж┐ mid++ ржирж╛ ржХрж░рждрж╛ржо?
рждрж╛рж╣рж▓рзЗ рж╕рзЗржЗ ржкрзБрж░рж╛ржирзЛ low ржерзЗржХрзЗ swap ржХрж░рж╛ ржорж╛ржиржЯрж╛ ржЖржмрж╛рж░ check ржХрж░рждрзЗ рж╣ржд, ржпрзЗржЯрж╛ ржПржХржмрж╛рж░ ржжрзЗржЦрж╛ рж╣рзЯрзЗ ржЧрзЗржЫрзЗтАФredundant рж╣рждрзЛред



 **ржХрзЗржи mid++ ржХрж░рж┐ржирж┐ else ржП?
ржХрж╛рж░ржг:

ржЖржорж░рж╛ ржпржЦржи 2 ржкрж╛ржЗ, рждржЦржи рж╕рзЗржЯрж╛ high pointer-ржПрж░ рж╕рж╛ржерзЗ swap ржХрж░рж┐ред

ржХрж┐ржирзНрждрзБ, high-ржПрж░ ржЬрж╛рзЯржЧрж╛рзЯ ржпрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ, рж╕рзЗржЯрж╛ ржПржЦржирзЛ check ржХрж░рж╛ рж╣рзЯржирж┐!

рждрж╛ржЗ, ржЖржорж░рж╛ mid-ржХрзЗ ржЖржЧрж╛ржмрзЛ ржирж╛, ржпрзЗржи рж╕рзЗржЗ ржирждрзБржи nums[mid] ржЖржмрж╛рж░ check ржХрж░рждрзЗ ржкрж╛рж░рж┐ред
nums = [2, 0, 1]
         тЖС     тЖС
        mid   high

nums[mid] == 2 тЖТ swap(nums[mid], nums[high])
тЖТ ржПржЦржи nums = [1, 0, 2], mid = 0, high = 1

тЭЧ ржПржЦржи ржпржжрж┐ mid++ ржХрж░рзЗ ржжрж┐рждрж╛ржо, рждрж╛рж╣рж▓рзЗ nums[0] == 1 check ржирж╛ ржХрж░рзЗржЗ skip рж╣рзЯрзЗ ржпрзЗрждред

рждрж╛ржЗ, mid ржХрзЗ ржЖржЧрж╛рзЯ ржирж╛тАФржЖржЧрж╛ржорзА iteration-ржП ржУржЗ ржирждрзБржи nums[mid] ржЖржмрж╛рж░ check ржХрж░рж┐ред



| Case                           | Example                  |
| ------------------------------ | ------------------------ |
| 3 fixed values only            | `[0, 1, 2, 1, 0, 2]`     |
| Grouping                       | RED, WHITE, BLUE balls   |
| Partitioning based on category | Negative, Zero, Positive |
