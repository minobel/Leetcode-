সমস্যা:
তোমাকে একটা অ্যারে দেওয়া আছে, যেখানে এমন একটি সংখ্যা আছে যেটা মোট সংখ্যা এর অর্ধেকের (n/2) বেশি বার repeated হয়েছে। তোমাকে সেই সংখ্যাটাই বের করতে হবে।

লজিক:
একটা candidate ধরে নাও — প্রথমে কোন সংখ্যাকে মনে করো যে সেটাই majority হতে পারে।

count সেট করো 0 থেকে শুরু — এটা ধরে রাখবে তোমার current candidate কতবার পরিস্কারভাবে বেছে নেওয়া হয়েছে।

অ্যারে একবার ফোর করে গিয়ে দেখো:

যদি count == 0 হয়, তাহলে তুমি নতুন candidate হিসেবে সেই সংখ্যাকে ধরো।

যদি সংখ্যাটা current candidate এর সমান হয়, তাহলে count বাড়াও (count++).

না হলে count কমাও (count--) — কারণ তুমি এটা ধরে নেবে যে এই সংখ্যাটা তোমার candidate এর বিপরীতে “cancel” করছে।

শেষ পর্যন্ত যেই candidate থাকবে, সেটাই হবে majority element।

কেন কাজ করে?
তুমি যখন count কমাও, মানে তুমি candidate এর বিপরীতে একটা সংখ্যা পেয়েছো এবং সেটাকে একসঙ্গে বাদ দিচ্ছো।

যেহেতু majority element অর্ধেকের বেশি বার আছে, সেজন্য যতোই cancel করো, সবশেষে সেটাই বেঁচে থাকবে।

nums = [3, 3, 4]

শুরুতে:
candidate = null, count = 0

i=0: count == 0 → candidate = 3, count = 1
i=1: nums[i] = 3 == candidate → count = 2
i=2: nums[i] = 4 != candidate → count = 1

শেষে candidate = 3 → Majority Element = 3




